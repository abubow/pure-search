#!/bin/bash

# Test integration between frontend and backend
# This script tests the API endpoints that the frontend would use

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Testing PureSearch Backend Integration...${NC}"

# Check if the API Gateway is running
if ! curl -s http://localhost:8080/health > /dev/null; then
    echo -e "${RED}Error: API Gateway is not running. Start the services first.${NC}"
    echo -e "${YELLOW}Run: docker-compose up -d${NC}"
    exit 1
fi

echo -e "${GREEN}API Gateway is running.${NC}"

# Test search endpoint
echo -e "${YELLOW}Testing search endpoint...${NC}"
search_response=$(curl -s "http://localhost:8080/api/v1/search?q=pure-search")
if [[ $search_response == *"results"* ]]; then
    echo -e "${GREEN}Search endpoint is working properly.${NC}"
else
    echo -e "${RED}Error: Search endpoint is not returning expected results.${NC}"
    echo $search_response
    exit 1
fi

# Check if the search results have the expected structure
echo -e "${YELLOW}Checking search results structure...${NC}"
if [[ $search_response == *"\"query\""* && $search_response == *"\"results\""* && $search_response == *"\"total\""* ]]; then
    echo -e "${GREEN}Search results have the expected structure.${NC}"
else
    echo -e "${RED}Error: Search results structure is not as expected.${NC}"
    echo $search_response
    exit 1
fi

# Test crawler endpoint with a sample URL
echo -e "${YELLOW}Testing crawler endpoint...${NC}"
crawler_response=$(curl -s -X POST http://localhost:8080/api/v1/crawl \
    -H "Content-Type: application/json" \
    -d '{"url": "https://example.com", "depth": 1}')

if [[ $crawler_response == *"success"* ]]; then
    echo -e "${GREEN}Crawler endpoint is working properly.${NC}"
else
    echo -e "${RED}Error: Crawler endpoint is not returning expected results.${NC}"
    echo $crawler_response
    exit 1
fi

# Test classification endpoint with a sample text
echo -e "${YELLOW}Testing classification endpoint...${NC}"
classification_response=$(curl -s -X POST http://localhost:8080/api/v1/classify \
    -H "Content-Type: application/json" \
    -d '{"text": "This is a sample text to test the classification endpoint. It should be classified as human-written content because it is not generated by an AI language model.", "url": "https://example.com/test"}')

if [[ $classification_response == *"status"* ]]; then
    echo -e "${GREEN}Classification endpoint is working properly.${NC}"
else
    echo -e "${RED}Error: Classification endpoint is not returning expected results.${NC}"
    echo $classification_response
    exit 1
fi

# Test indexing endpoint with a sample content
echo -e "${YELLOW}Testing indexing endpoint...${NC}"
indexing_response=$(curl -s -X POST http://localhost:8080/api/v1/index \
    -H "Content-Type: application/json" \
    -d '{"url": "https://example.com/test-content", "title": "Test Content", "description": "A sample content for testing the indexing endpoint", "content": "This is a sample content to test the indexing endpoint. It contains enough text to be indexed properly."}')

if [[ $indexing_response == *"status"* ]]; then
    echo -e "${GREEN}Indexing endpoint is working properly.${NC}"
else
    echo -e "${RED}Error: Indexing endpoint is not returning expected results.${NC}"
    echo $indexing_response
    exit 1
fi

echo -e "${GREEN}All integration tests passed successfully!${NC}"
echo -e "${YELLOW}The backend is ready to be used with the frontend.${NC}"
echo -e "${YELLOW}Frontend should connect to: http://localhost:8080/api/v1 for all API requests.${NC}" 